standardized.x <- ((women123$water - mean(women123$water))/sd(women123$water)
standardized.x <- ((women123$water - mean(women123$water)))/sd(women123$water)
standardized.x <- ((women123$water - mean(women123$water)))/sd(women123$water)
r <- (1/(322-1))*sum(standardized.x)
r
#Question 3
fruitfly <- read.csv("fruitfly.csv")
library(readr)
fruitfly <- read_csv("~/GitHub/QTM200Spring2020/problem_sets/PS2/fruitfly.csv")
View(fruitfly)
#Question 3
#importing data
library(readr)
fruitfly <- read_csv("~/GitHub/QTM200Spring2020/problem_sets/PS2/fruitfly.csv")
View(fruitfly)
summary(fruitfly)
#lifspan vs thorax
plot(fruitfly$thorax~fruitfly$lifespan)
lst.model <- lm(fruitfly$thorax~fruitfly$lifespan)
plot(fruitfly$thorax~fruitfly$lifespan)
lst.model <- lm(fruitfly$thorax~fruitfly$lifespan)
lst.model
abline(lst.model)
#lifspan vs thorax
ggplot(fruitfly, aes(x=lifespan, y=thorax))+
geom_point()+
geom_smooth()
#lifspan vs thorax
ggplot(fruitfly, aes(x=lifespan, y=thorax))+
geom_point()+
geom_smooth(method=lm)
abline(lst.model)
plot(fruitfly$thorax~fruitfly$lifespan)
lst.model <- lm(fruitfly$thorax~fruitfly$lifespan)
lst.model
abline(lst.model)
c(round(mean(fruitfly$lifespan), 2), round(sd(fruitfly$lifespan),2))
#for y value
c(round(mean(fruitfly$thorax), 2), round(sd(fruitfly$thorax),2))
standardized.lifespan <- (fruitfly$lifespan - mean(fruitfly$lifespan))/sd(fruitfly$lifespan)
standardized.thorax <- (fruitfly$thorax- mean(fruitfly$thorax))/sd(fruitfly$thorax)
c(round(mean(fruitfly$lifespan), 2), round(sd(fruitfly$lifespan),2))
#for y value
c(round(mean(fruitfly$thorax), 2), round(sd(fruitfly$thorax),2))
standardized.lifespan <- (fruitfly$lifespan - mean(fruitfly$lifespan))/sd(fruitfly$lifespan)
standardized.thorax <- (fruitfly$thorax- mean(fruitfly$thorax))/sd(fruitfly$thorax)
r_fruitfly <- (1/(125-1))*sum(standardized.lifespan*standardized.thorax)
r_fruitfly
#slope
plot(fruitfly$thorax~fruitfly$lifespan)
lst.model <- lm(fruitfly$thorax~fruitfly$lifespan)
lst.model
abline(lst.model)
summary(lm(fruitfly$thorax~fruitfly$lifespan))
#significant linear relationship between lifespan and thorax
summary(lm(fruitfly$thorax~fruitfly$lifespan))
#using confint
confint(fruitfly)
#using confint
confint(lst.model)
#90% confidence interval for the slope
b0 <- lst.model$coefficients
b1 <- lst.model$coefficients
pred.y <- b1 * pred.x + b0
#significant linear relationship between lifespan and thorax
summary(lm(fruitfly$thorax~fruitfly$lifespan))
#90% confidence interval for the slope
summary(lst.model)
#using confint
confint(lst.model, level = 0.9)
predict(lst.model, interval = "confidence")
predict(lst.model, interval = "confidence", level = 0.90)
#using confint
confint(lst.model, level = 0.9)
#significant linear relationship between lifespan and thorax
summary(lm(fruitfly$thorax~fruitfly$lifespan))
t.s <- (0.0028068 - 0)/0.0003067
0.0028068 + t.s * 0.0003067
#using confint
confint(lst.model, level = 0.9)
#using confint
confint(lst.model, level = 0.9)
CI <-0.0028068 + t.s * 0.0003067
0.0028068 +CI
#90% confidence interval for the slope
summary(lst.model)
CI <-0.0028068 + 1.66 * 0.0003067
0.0028068 +CI
#using confint
confint(lst.model, level = 0.9)
0.033-0.0038
CI <-0.0028068 + 1.66 * 0.0003067
(CI <-0.0028068 + 1.66 * 0.0003067)
(0.002298507-0.003315053) +0.003315053
(0.002298507-0.003315053) +0.003315053
#90% confidence interval for the slope
summary(lst.model)
n <- 125
error <- qt(0.90, df = n-2)*s/sqrt(n)
#90% confidence interval for the slope
summary(lst.model)
s <- 0.0003067
n <- 125
error <- qt(0.90, df = n-2)*s/sqrt(n)
b1 <- 0.0028068
s <- 0.0003067
n <- 125
error <- qt(0.90, df = n-2)*s/sqrt(n)
left <- b1 - error
right <- b1 + error
left
right
#using confint
confint(lst.model, level = 0.9)
(0.002298507-0.003315053) +0.003315053
(0.002298507-0.003315053)/2 +0.003315053
(0.002298507-0.003315053)/2
b1 <- 0.0028068
s <- 0.0003067
n <- 125
error <- qt(0.90, df = n-2)*s/sqrt(n)
left <- b1 - error
right <- b1 + error
left
right
error <- qt(0.90, df = n-2)*s/sqrt(n)
left <- b1 - 1.66*error
right <- b1 + 1.66*error
left
right
predict(lst.model, interval = "confidence", level = 0.90)
error <- qt(0.90, df = n-2)*s/sqrt(n)
left <- b1 - 1.66*error
right <- b1 + 1.66*error
left
right
(0.002298507-0.003315053)/2*1.66
#90% confidence interval for the slope
summary(lst.model)
(0.002298507-0.003315053)/2/0.000306
(0.0028068 + 1.66 * 0.0003067)
(0.0028068 - 1.66 * 0.0003067)
#using confint
confint(lst.model, level = 0.9)
error
error <- qt(0.10, df = n-2)
error
error <- qt(0.90, df = n-2)
error
error <- qt(0.90, df = n)
error
error <- qt(0.90/2, df = n)
error
left <- b1 - 1.66*error
error <- qt(0.10/2, df = n)
error
error <- qt(0.10/2, df = n-2)
error
error <- qt(0.90/2, df = n-2)
error
error <- qt(0.1/2, df = n-2)
error
error <- abs(qt(0.1/2, df = n-2))
error
summary(lst.model)
b1 <- 0.0028068
s <- 0.0003067
n <- 125
t <- abs(qt(0.1/2, df = n-2))
t
left <- b1 - s*t
right <- b1 + s*t
left
right
#using confint
confint(lst.model, level = 0.9)
t
#90% confidence interval for the slope
summary(lst.model)
#slope
b1 <- 0.0028068
#standard error of slope value
s <- 0.0003067
# size
n <- 125
# t-value
t <- abs(qt(0.1/2, df = n-2))
t
#left and right confidence intervals
left <- b1 - s*t
right <- b1 + s*t
left
right
predict (lst.model, newdata=new_fruitfly$thorax, se.fit = T)
new_fruitfly$thorax <- 0.8
predict (lst.model, newdata=new_fruitfly$thorax, se.fit = T)
#Question 6
new_fruitfly$thorax <- 0.8
#Question 6
newfruitfly<- fruitfly; newfruitfly$thorax <- 0.8
predict (lst.model, newdata=new_fruitfly$thorax, se.fit = T)
#Question 6
newfruitfly<- fruitfly; newfruitfly$thorax <- 0.8
predict (lst.model, newdata=new_fruitfly$thorax, se.fit = T)
predict (lst.model, newdata=newfruitfly$thorax, se.fit = T)
#Question 6
newfruitfly<- fruitfly; newfruitfly$thorax <- 0.8
predict(lst.mode, newdata=newfruitfly, se.fit = T)
predict(lst.model, newdata=newfruitfly, se.fit = T)
## his way of finding standard error and inference
#beta_1
beta <- sum((fruitfly$thorax - mean(fruitfly$thorax))* (fruitfly$lifespan - mean(fruitfly$lifespan)))/sum((fruitfly$lifespan - mean(fruitfly$lifespan))^2)
beta
#90% confidence interval for the slope
summary(lst.model)
#using confint
confint(lst.model, level = 0.9)
reg1 <- lm(thorax~lifespan, data = fruitfly)
reg1
sd_estimate <- sqrt(sum(resid(reg1)^2/(dim(fruitfly)[1]-2)))
sd_estimate
sigma(reg1)
# SE for beta_1
beta_se <- sd_estimate/sqrt(sum((fruitfly$lifespan - mean (fruitfly$lifespan))^2))
beta_se
2*pt((beta-0)/beta_se, dim(fruitfly)[1]-2, lower.tail = F)
#significant linear relationship between lifespan and thorax
summary(lm(fruitfly$thorax~fruitfly$lifespan))
left
right
#Question 6
new_fruitfly<- fruitfly; new_fruitfly$thorax <- 0.8
predict(lst.model, newdata=new_fruitfly, se.fit = T)
new_fruitfly<- fruitfly;
new_fruitfly$thorax <- 0.8
predict(lst.model, new_fruitfly, se.fit = T)
predict(lst.model, new_fruitfly, se.fit = T, interval = "prediction")
?predict
predict(lm(Y~X), newdata = new_fruitfly, se.fit = T)
View(new_fruitfly)
ggplot(fruitfly, aes(x= thorax, y=lifespan))+
geom_point()+
geom_smooth()
ggplot(fruitfly, aes(x= thorax, y=lifespan))+
geom_point()+
geom_smooth(method=lm)
plot2<- lm(fruitfly$lifespan~fruitfly$thorax)
predict(plot2), newdata = new_fruitfly, se.fit = T)
predict(plot2, newdata = new_fruitfly, se.fit = T)
predict(plot2, newdata = new_fruitfly, se.fit = T, interval = "prediction")
predict(plot2, data = new_fruitfly, se.fit = T, interval = "prediction")
View(fruitfly)
reg1 <- lm(thorax~lifespan, data = fruitfly) # checking regression to check if our estimates are correct
reg1
sd_estimate <- sqrt(sum(resid(reg1)^2/(dim(fruitfly)[1]-2)))
#Question 6
new_fruitfly<- fruitfly;
new_fruitfly$thorax <- 0.8
predict(plot2, newdata = new_fruitfly, se.fit = T, interval = "prediction")
predict(plot2, newdata = new_fruitfly$thorax, se.fit = T, interval = "prediction")
predict(plot2, new_fruitfly$thorax, se.fit = T, interval = "prediction")
predict(plot2, newdata = new_fruitfly, se.fit = T, interval = "prediction")
mean(predict(plot2, newdata = new_fruitfly, se.fit = T, interval = "prediction"))
#Question 6
new_fruitfly<- 0.8
predict(plot2, newdata = new_fruitfly, se.fit = T, interval = "prediction")
predict(plot2, newdata = new_fruitfly, se.fit = T)
#Question 6
new_fruitfly<- fruitfly;
new_fruitfly$thorax <- 0.8
pred.int<- predict(plot2, newdata = new_fruitfly, se.fit = T, interval = "prediction")
mydata <- cbind(new_fruitfly, pred.int)
ggplot(mydad, aes(y=lifespan, x= thorax))+
geom_point()+
geom_smooth()+
geom_line(aes(y=lwr), color = "red", linetype="dashed")+
geom_line(aes(y=upr)), color = "red", linetype = "dashed")
pred.int<- predict(plot2, newdata = new_fruitfly, se.fit = T, interval = "prediction")
mydata <- cbind(new_fruitfly, pred.int)
pred.int
#significant linear relationship between lifespan and thorax
#beta_1
beta <- sum((fruitfly$lifespan - mean(fruitfly$lifespan))* (fruitfly$thorax - mean(fruitfly$thorax)))/sum((fruitfly$thorax - mean(fruitfly$thorax))^2)
beta
reg1 <- lm(lifespan~thorax, data = fruitfly) # checking regression to check if our estimates are correct
reg1
sd_estimate <- sqrt(sum(resid(reg1)^2/(dim(fruitfly)[1]-2)))
sd_estimate
sigma(reg1)
# SE for beta_1
beta_se <- sd_estimate/sqrt(sum((fruitfly$thorax - mean (fruitfly$thorax))^2))
beta_se
2*pt((beta-0)/beta_se, dim(fruitfly)[1]-2, lower.tail = F)
#to check the right p-value
summary(lm(fruitfly$thorax~fruitfly$lifespan))
#90% confidence interval for the slope
summary(lst.model)
#importing data
library(readr)
fruitfly <- read_csv("~/GitHub/QTM200Spring2020/problem_sets/PS2/fruitfly.csv")
View(fruitfly)
summary(fruitfly)
#lifespan vs thorax
ggplot(fruitfly, aes(x= thorax, y=lifespan))+
geom_point()+
geom_smooth(method=lm)
#correlation coefficient
#for y value
c(round(mean(fruitfly$lifespan), 2), round(sd(fruitfly$lifespan),2))
#for x value
c(round(mean(fruitfly$thorax), 2), round(sd(fruitfly$thorax),2))
standardized.lifespan <- (fruitfly$lifespan - mean(fruitfly$lifespan))/sd(fruitfly$lifespan)
standardized.thorax <- (fruitfly$thorax- mean(fruitfly$thorax))/sd(fruitfly$thorax)
r_fruitfly <- (1/(125-1))*sum(standardized.lifespan*standardized.thorax)
r_fruitfly
#slope
plot(fruitfly$lifespan~fruitfly$thorax)
lst.model <- lm(fruitfly$lifespan~fruitfly$thorax)
lst.model
abline(lst.model)
#significant linear relationship between lifespan and thorax
#beta_1
beta <- sum((fruitfly$lifespan - mean(fruitfly$lifespan))* (fruitfly$thorax - mean(fruitfly$thorax)))/sum((fruitfly$thorax - mean(fruitfly$thorax))^2)
beta
reg1 <- lm(lifespan~thorax, data = fruitfly) # checking regression to check if our estimates are correct
reg1
sd_estimate <- sqrt(sum(resid(reg1)^2/(dim(fruitfly)[1]-2)))
sd_estimate
sigma(reg1)
# SE for beta_1
beta_se <- sd_estimate/sqrt(sum((fruitfly$thorax - mean (fruitfly$thorax))^2))
beta_se
2*pt((beta-0)/beta_se, dim(fruitfly)[1]-2, lower.tail = F)
#to check the right p-value
summary(lm(fruitfly$thorax~fruitfly$lifespan))
#90% confidence interval for the slope
summary(lst.model)
#90% confidence interval for the slope
summary(lst.model)
#slope
b1 <- 144.33
#standard error of slope value
s <- 15.77
# size
n <- 125
# t-value
t <- abs(qt(0.1/2, df = n-2)) #because the test is a two-tailed test
t
#left and right confidence intervals
left <- b1 - s*t
right <- b1 + s*t
left
right
#using confint
confint(lst.model, level = 0.9)
ew_fruitfly<- fruitfly;
new_fruitfly$thorax <- 0.8
predict(plot2, newdata = new_fruitfly, se.fit = T, interval = "prediction")
predict(plot2, newdata = new_fruitfly, interval = "prediction")
ggplot(mydad, aes(y=lifespan, x= thorax))+
geom_point()+
geom_smooth()+
geom_line(aes(y=lwr), color = "red", linetype="dashed")+
geom_line(aes(y=upr)), color = "red", linetype = "dashed")
#average lifespan of fruitflies
predict(lst.model, newdata = new_fruitfly, interval = "confidnece")
#average lifespan of fruitflies
predict(lst.model, newdata = new_fruitfly, interval = "confidence")
predict(lst.model, newdata = new_fruitfly, interval = "prediction")
mean(fit)
mean(indiv_p$fit)
indiv_p <- predict(lst.model, newdata = new_fruitfly, interval = "prediction")
mean(indiv_p$fit)
predict(lst.model, newdata = new_fruitfly, interval = "prediction")
p$fit
p <- predict(lst.model, newdata = new_fruitfly, interval = "prediction")
p$fit
View(p)
mean(p$fit)
mean(p["fit"])
p <- as.data.frame(predict(lst.model, newdata = new_fruitfly, interval = "prediction"))
mean(p$fit)
c<- as.data.frame(predict(lst.model, newdata = new_fruitfly, interval = "confidence"))
mean(c$fit)
mean(c$lwr)
mean(c$upper)
mean(c$upr)
ggplot(new_fruitfly, aes(y=lifespan, x= thorax))+
geom_point()+
geom_line(aes(y=lwr), color = "red", linetype="dashed")+
geom_line(aes(y=upr), color = "red", linetype = "dashed")
ggplot(p, aes(y=lifespan, x= thorax))+
geom_point()+
geom_line(aes(y=lwr), color = "red", linetype="dashed")+
geom_line(aes(y=upr), color = "red", linetype = "dashed")
View(c)
ggplot(new_fruitfly, aes(y=lifespan, x= thorax))+
geom_point()+
geom_line(aes(y=lwr), data=p, color = "red", linetype="dashed")+
geom_line(aes(y=upr), color = "red", linetype = "dashed")
ggplot(fruitfly, aes(y=lifespan, x= thorax))+
geom_point()+
geom_line(aes(y=lwr), data=p, color = "red", linetype="dashed")+
geom_line(aes(y=upr), color = "red", linetype = "dashed")
ggplot(fruitfly, aes(y=lifespan, x= thorax))+
geom_point()+
geom_line(aes(y=lwr), data=new_fruitfly, color = "red", linetype="dashed")+
geom_line(aes(y=upr), color = "red", linetype = "dashed")
ggplot(fruitfly, aes(y=lifespan, x= thorax))+
geom_point()+
geom_line(aes(y=lwr), data=new_fruitfly, color = "red", linetype="dashed")+
geom_line(aes(y=upr), color = "red", linetype = "dashed")
chisq<- chisq.test(tbl)
tbl
tbl <- matrix(c(14, 6, 7, 7, 7, 1), nrow=2, ncol=3)
rownames(tbl) = c("Upper class", "Lower class")
colnames(tbl) = c("Not Stopped", "Bribe requested", "Stopped/given warning")
tbl
chisq<- chisq.test(tbl)
plot(women123$water~women123$GP)
#adding the linear regression model
temp.model <- lm(women123$water~women123$GP)
temp.model
abline(temp.model)
c(round(mean(women123$water), 2), round(sd(women123$water),2)) #the mean and standard deviation of water
standardized.x <- ((women123$water - mean(women123$water)))/sd(women123$water) #create standardized distance for each observation of water
round(standardized.x, 2) #vecot of standaridized values
r <- (1/(322-1))*sum(standardized.x) #computing correlation coefficient
r
library(readr)
fruitfly <- read_csv("~/GitHub/QTM200Spring2020/problem_sets/PS2/fruitfly.csv")
View(fruitfly)
summary(fruitfly)
ggplot(fruitfly, aes(x= thorax, y=lifespan))+
geom_point()+
geom_smooth(method=lm)
c(round(mean(fruitfly$lifespan), 2), round(sd(fruitfly$lifespan),2))
#for x value
c(round(mean(fruitfly$thorax), 2), round(sd(fruitfly$thorax),2))
standardized.lifespan <- (fruitfly$lifespan - mean(fruitfly$lifespan))/sd(fruitfly$lifespan)
standardized.thorax <- (fruitfly$thorax- mean(fruitfly$thorax))/sd(fruitfly$thorax)
r_fruitfly <- (1/(125-1))*sum(standardized.lifespan*standardized.thorax)
r_fruitfly
plot(fruitfly$lifespan~fruitfly$thorax)
lst.model <- lm(fruitfly$lifespan~fruitfly$thorax)
lst.model
abline(lst.model)
lst.model
beta_1
beta <- sum((fruitfly$lifespan - mean(fruitfly$lifespan))* (fruitfly$thorax - mean(fruitfly$thorax)))/sum((fruitfly$thorax - mean(fruitfly$thorax))^2)
beta
reg1 <- lm(lifespan~thorax, data = fruitfly) # checking regression to check if our estimates are correct
reg1
sd_estimate <- sqrt(sum(resid(reg1)^2/(dim(fruitfly)[1]-2)))
sd_estimate
sigma(reg1)
# SE for beta_1
beta_se <- sd_estimate/sqrt(sum((fruitfly$thorax - mean (fruitfly$thorax))^2))
beta_se
2*pt((beta-0)/beta_se, dim(fruitfly)[1]-2, lower.tail = F)
#using confint
confint(lst.model, level = 0.9)
#90% confidence interval for the slope
summary(lst.model)
#slope
b1 <- 144.33
#standard error of slope value
s <- 15.77
# size
n <- 125
# t-value
t <- abs(qt(0.1/2, df = n-2)) #because the test is a two-tailed test
t
#left and right confidence intervals
left <- b1 - s*t
right <- b1 + s*t
left
right
#using confint
confint(lst.model, level = 0.9)
new_fruitfly<- fruitfly;
new_fruitfly$thorax <- 0.8
p <- as.data.frame(predict(lst.model, newdata = new_fruitfly, interval = "prediction"))
mean(p$fit)
c<- as.data.frame(predict(lst.model, newdata = new_fruitfly, interval = "confidence"))
mean(c$upr)
mean(c$lwr)
#lifespan vs thorax
ggplot(fruitfly, aes(x= thorax, y=lifespan))+
geom_point()+
geom_smooth(method=lm)
predict_fruitflies <- fruitflies + geom_line(aes(y=c$lwr), color = "red", linetype = "dashed")+
geom_line(aes(y=c%upr), color, "red", linetype = "dashed")
Question 7
fruitflies <- ggplot(data = fruitfly, aes(y=lifespan, x=thorax))+
geom_point()+
geom_smooth(method = "lm")
predict_fruitflies <- fruitflies + geom_line(aes(y=c$lwr), color = "red", linetype = "dashed")+
geom_line(aes(y=c%upr), color, "red", linetype = "dashed")
predict_fruitflies <- fruitflies + geom_line(aes(y=c$lwr), color = "red", linetype = "dashed")+
geom_line(aes(y=c$upr), color, "red", linetype = "dashed")
predict_fruitflies <- fruitflies + geom_line(aes(y=c$lwr), color = "red", linetype = "dashed")+
geom_line(aes(y=c$upr), color ="red", linetype = "dashed")
predict_fruitflies
predict_fruitflies <- fruitflies + geom_line(aes(y=p$lwr), color = "red", linetype = "dashed")+
geom_line(aes(y=p$upr), color ="red", linetype = "dashed")
predict_fruitflies
predict_fruitflies <- fruitflies + geom_line(aes(y=p$lwr), color = "red", linetype = "dashed")+
geom_line(aes(y=p$upr), color ="red", linetype = "dashed") +
geom_line(aes(y=c$lwr), color="purple", linetype = "dashed")+
geom_line(aes(y=c$upr), color = "purple", linetype = "dashed")
predict_fruitflies
